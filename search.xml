<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[真正的学习，发生在行动之后]]></title>
      <url>%2F2017%2F04%2F08%2F%E7%9C%9F%E6%AD%A3%E7%9A%84%E5%AD%A6%E4%B9%A0%EF%BC%8C%E5%8F%91%E7%94%9F%E5%9C%A8%E8%A1%8C%E5%8A%A8%E4%B9%8B%E5%90%8E%2F</url>
      <content type="text"><![CDATA[今天读到一篇文章《真正的学习，发生在行动之后》对此文观点颇有感概，因为自己深有体会，再高大上的概念与方法论，你不能去践行，那也是无用，也许仅仅是在那一刻你仿佛觉得“悟”到而已。不亲自实践、行动，那是伪学习。下面是原文转载: 真正的学习，发生在行动之后 作者陈立飞（Spenser），坐标香港，混迹金融圈的职场老司机，50 万订阅作者，本文转载自其公众号（ID：spenserandhk)。 前段时间在香港城市大学，和负责 EMBA 项目的教授聊当下互联网下的新商业环境和传播方式。教授也是内容营销方面的专家，交流了一个小时后，他突然认真地和我说： 改天邀请你给我们 EMBA 的学员上个课吧。 我说好呀，在互联网商业，尤其在新媒体领域，我应该算是香港最懂的那一拨人。 从九龙塘回红磡的地铁上，我心里感慨，四年前也考虑过申请读个 MBA，但当时觉得学费太贵，没想到现在可以有机会给 EMBA 的人上课。 我明显感觉，这一轮互联网技术，带来全新的商业模式，更带来全新的知识革命。 二手知识迅速崩塌，一手知识热得烫手在我眼里，如今的知识，分为一手知识和二手知识。 学院派的理论知识，开始摧枯拉朽般，迅速进入半衰期，沦为二手知识。 这两年赶了不少金融圈和互联网圈的场子。比如在北京或深圳某一栋楼的联合办公空间，或在一个个创业咖啡的半开放区，今天听这个公司的 CMO 讲市场，明天听那个公司的 COO 讲运营；高级一点呢，在浦东嘉里酒店或国贸三期听投资论坛，或者就是挂着北大清华复旦的牌子，办所谓的 MBA 或总裁班课程。 然后我发现这么一个现象，越是接地气的场子，有时候往往越有干货越有料；而反倒越往上越学院派的场子，讲的内容挺水的。 看似意外，其实合理。 因为江湖上的人，都是一路浑水一路坑总结出来的一手经验；而学院上讲课的人，更多是旧知识的搬运工。 而且，我经常讲的是，过去的经验和知识，放在当下的商业场景中，多半是错的。 这年头，知识的搬运工越来越不值钱了，知识的实践者，才金光闪闪，牛逼哄哄。 为什么，因为互联网的迭代速度太快，使知识的更新也多了几个加速度。 导致的结果是，知识的二级市场，可能会玩不转了，如今的二手知识就如同新买的车，在落地那一刻，价格先贬值三分之一。 有些坑一定要自己跳过才会懂，有些浑水一定要自己趟过才深刻。一手知识，不是说出来的，是做出来的，这才会成为稀缺价值的知识一级市场。 提前行动，才可能提早获得船票经常有读者咨询我说：Spenser，我想去国外学习，但还没确定该不该去，请问，我该怎么考虑这个问题呢？ 我说，看你要学什么。 如果你想学习最前沿的理工科知识，成为耐得住寂寞的研究者，可以去；如果你只是想去个听起来更牛逼的学校给简历镀金，身份洗白，你也该去。 但是，如果你想杀入刀光剑影的互联网领域，不管是做产品或者做运营和市场，去国外“镀金” 一两年再回来的结果是 —— 你只会更加看不懂中国的互联网生态。 你还不如找个看着还挺有上升势头的互联网公司，浸淫两年，这远比你在国外学到的要多。 因为现在的很多领域，当互联成为底层架构后，都几乎全面更新了。新到什么程度呢，就是传统媒体的人，很多是看不懂新媒体的传播模式；传统金融领域的人，好些都看不太明白互联网金融的玩法。 这是真的，行业内部的人都不太懂，不是看不懂这个行业，而是看不懂互联网 —— 更何况是外行呢。前几天和“摩登中产”的创始人王鹏在望京的咖啡馆聊天，之前身为京华时报特稿记者的他，文笔甩我几十条街。 他说像他们这种以文字为生的人，对文字还是挑剔的。 很多公众号的文章，我一般不会看，但是 Spenser 你的文字，我还是能看得下去的。 我说你这是夸我还是损我。 他说身边有些极有才华的文人，不愿意抛头露脸，写得极好的文章，甚至都刻意隐去署名。 这是传统文人的骄傲，没有互联网的聒噪 —— 听着挺感动的。 可惜现实是，因为没有选择主动去拥抱时代的变化，他们的才华，无法获得互联网生态下该有的价值。 互联网拥抱的，是“新世相”的张伟，以文化商人的姿态，用市场化的文艺，让众多文艺青年簇拥在周围，嚷嚷着要改变潮水的方向。 每次技术革命都是双刃剑，带来时代的精华和糟粕，就像金钱就是一个中性词。我们要做的，是早点行动，拥抱改变，而不至于两年之后才姗姗来迟，不断抱怨 —— “红利期已经过去了。” 答应我，这么有才华的你，我们不要把世界让给傻逼们，好么。 真正的学习，只有发生在行动之后这不是一句鸡汤而已。 我经常说： 一个人真正的懒，不是懒在没有学习，而是懒在没有行动。 因为学习本身，其实还是比较舒服的被动姿势，别人用所谓高逼格的知识按摩你的灵魂，那一刻，你很满足，你仿佛进步了一点点。 但事实上，你只是在意淫知识的春药而已。 只有采取行动，才是真正和自己的懒癌作斗争，你会意识到，只有自己摸索，不断调整，最后，你突破了舒适圈，才真的进步了很多。 知识本身哪有什么用，是你的行动让你更好而已。 再进一步说，行动其实也不难，难的是持续有效的行动。 而持续行动力的产生，是内心的时刻自律和环境的不断反馈，双向作用的结果。 在我眼里，一个普通的老师，只是教了很高级的知识；而一个真正厉害的老师，除了教授知识以外，更重要的是垂范，引领，提供学习氛围，营造学习风貌。 这比提供知识本身，高级很多。 比如之前在新东方教英文的李笑来老师团队，在一块听听上做了“天天用英语”的全年课程。 我问李老师，为什么名称是“天天用英语”，而不是“天天学英语”。 好知识是用出来的，不是学出来的。 他说。 学习在于陪伴，一套 365 天全年无休的实用英语课，每晚 9 点，从英美主流媒体精选近期文章，每天陪你一小时。 为了真正体现“用”，天天用英语团队在各个城市建立了英语学习的社群，凝聚一批人，让大家在更好的英语学习氛围里，用英语交流、连接，共同成长。 成年人，想要找个既有持续性又不贵的英语学习渠道，真的很难。我在这款产品上看到了两个字：诚意。有兴趣的同学，可以点击阅读原文或识别下图二维码，直接购买，融入他们的学习社群，用出真正属于自己的好知识。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo与GitHub免费搭建个人博客（二）]]></title>
      <url>%2F2017%2F04%2F03%2FHexo%E4%B8%8EGitHub%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
      <content type="text"><![CDATA[【原创】 上篇文章介绍了GitHub Pages环境搭建，本篇文章的主题是 Hexo+NexT主题构建个人博客 关于HexoHexo：快速、简洁且高效的博客框架 ，基于Node语言开发的。具有一下特性： 超快速度 Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染 支持 Markdown 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件 一键部署 只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站 丰富的插件 Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript 选择Hexo框架的原因之一它简洁主题，以及对MarkDown的支持。现在感觉下来确实不错。 闲话不多说，介绍下，我是怎么一步步构建我的博客的。PS：其实 Hexo官网介绍很详细，跟着官网操作就OK，这里只是一步步介绍我的操作步骤 安装Hexo安装前提安装Hexo之前，要确保你的电脑安装了 Node.jsGit 关于Node与Git的安装，这里不做介绍，不熟悉的童鞋可以去 Google 下 ok，Node.js 和 Git已经搞定后，第一步，打开终端，执行 Hexo 安装命令： 1$ npm install -g hexo-cli 这地方我报错，因为没有权限，重新执行：sudo npm install -g hexo-cli 搞定 安装完成后，检查是否安装成功，执行一下命令 1$ hexo -verson 正确输出 hexo 版本 12345678910111213limi ~ $ hexo -versonhexo-cli: 1.0.2os: Darwin 16.4.0 darwin x64http_parser: 2.7.0node: 6.8.1v8: 5.1.281.84uv: 1.9.1zlib: 1.2.8ares: 1.10.1-DEVicu: 57.1modules: 48openssl: 1.0.2jlimi ~ $ OK , 安装成功！ 建站Hexo 安装成功后，我们可以开始构建自己的博客啦，首先初始化博客目录 1$ hexo init myblog 初始化完成后，切换到博客目录，我的目录是myblog 1$ cd myblog 执行安装命令 1$ npm install 稍等片刻，安装完成后，mybolg子目录如下12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 各个文件及文件夹含义，不做介绍，想知道请移步官方介绍。 OK , 安装完成后，我们开启服务，命令如下1$ hexo server 输出内容12INFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. OK，启动成功啦，默认发布地址是 http://localhost:4000/ ，当然你也可以修改端口号1$ hexo server -p --8888 OK，现在打开浏览器，就可以访问到你的博客啦，就这么简单！ Hexo 安装成功后，默认的主题是landscape，相比我更喜欢 NexT 主题，见我个人博客 先贴图 接下来，介绍更换 NexT 主题 更换 NexT 主题下载 NexTNext 官网 下载最新 NexT主题，然后把下载的目录文件名称改成 next，拷贝该目录至 博客目录/themes 目录下 修改 _config.yml 配置文件博客目录下，打开 _config.yml 文件，修改 theme 成 next 重新启动服务，刷新页面，OK，NexT主题更换成功 好啦，先介绍到这儿，下一篇文章介绍 NexT 主题配置 本文作者 : 李仁密版权声明 : 自由转载，转载请注明出处！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo与GitHub免费搭建个人博客（一）]]></title>
      <url>%2F2017%2F04%2F02%2FHexo%E4%B8%8EGitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[【原创】 本来计划自己动手开发一个个人博客网站，但是考虑到需要时间成本，而且需要购买空间或者服务器，所以采用了Hexo + GitHub pages这种方式快速搭建博客。博客最终效果 环境准备Mac OS操作系统Git：Git是目前最流行的版本管理系统，学会Git几乎成了开发者的必备技能，更多详情请参照 Git远程操作详解Hexo：一个快速构建个人博客系统的开源框架，支持MarkDownNode：Hexo是基于Node框架开发，所以需要Node环境NexT主题：针对Hexo的一个主题，风格简洁清爽，常用插件支持GitHub Pages ：官方介绍是面向用户、组织和项目开放的公共静态页面搭建托管服务，站点可以被免费托管在Github 上，你可以选择使用Github Pages 默认提供的域名github.io 或者自定义域名来发布站点阿里云域名：我是在阿里云购买了一个个人域名www.lirenmi.cn，然后与GitHub Pages域名绑定，实现个性域名访问博客，当然你也可以不购买域名，用GitHub Pages注册地址。看个人需求 GitHub Pages环境搭建第一、先要注册GitHub账户第二、创建repository第三、创建页面index.html第四、查看GitHub Pages发布地址 1、注册GitHub 访问 GitHub，注册GitHub账户，注意：userName和后面的GitHub Pages访问地址有关。注册成功后要记得邮箱激活GitHub. 2、创建repository 注册成功登陆后，点击“New repository”创建repository，如下图所示 接下来填写Repository Name，格式：[userName].github.io , userName是你注册GitHub填写的userName. 例如下图， ZhangYaru8829 是我GitHub的用户名。如下图所示 注意：Repository Name一定要是[userName].github.io 格式 然后点击 “Create repository”按钮，创建repository 注意：创建repository时，注意勾选 “Initialize this repository with a README”选项 3、创建页面index.html 创建repository成功后，来添加我们的第一个页面 index.html. 点击 “Create new file”按钮，如下图 创建index.html，增加页面代码123456789&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;my GitHub Pages&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;我的 GitHub Pages 创建成功啦！&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 创建时，注意使用默认master分支 4、查看GitHub Pages发布地址点击 “Settings” 按钮，查看 GitHub Pages 地址。 GitHub Pages发布地址 GitHub Pages搭建成功啦！ 本文作者 : 李仁密版权声明 : 自由转载，转载请注明出处！]]></content>
    </entry>

    
  
  
</search>
